{"version":3,"sources":["features/character-info/views/CharacterInfo.module.scss","features/characters-list/components/Character.module.scss","features/navbar/NavBar.module.scss","features/character-quotes/components/Quote.module.scss","features/pagination/Pagination.module.scss","App.module.scss","features/character-quotes/views/CharacterQuotes.module.scss","API/index.js","features/character-info/redux/CharacterInfoSlice.jsx","features/characters-list/redux/CharactersSlice.jsx","features/character-quotes/redux/CharacterQuoteSlice.jsx","app/store.js","features/pagination/Pagination.jsx","features/characters-list/components/Character.jsx","features/characters-list/views/CharactersList.jsx","features/favorite-quotes/views/FavoriteQuotes.jsx","features/character-info/views/CharacterInfo.jsx","features/character-quotes/components/Quote.jsx","features/character-quotes/views/CharacterQuotes.jsx","features/routing/Routes.jsx","features/navbar/NavBar.jsx","App.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","process","fetchCharactersInfo","createAsyncThunk","url","a","get","response","data","CharacterInfoSlice","createSlice","name","initialState","characters","status","reducers","extraReducers","pending","state","fulfilled","action","payload","rejected","console","error","fetchCharacters","CharacterSlice","message","fetchCharacterQuotes","CharacterQuoteSlice","quotes","store","configureStore","reducer","combineReducers","charInfo","Pagination","setPage","currentPage","lastPage","className","styles","pagination","onClick","pageInfo","Character","item","characterWrapper","thumb","src","img","alt","info","nickname","link","to","generatePath","RoutePath","CHARACTER","charId","char_id","CharactersList","useSelector","dispatch","useDispatch","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","useEffect","newPage","set","push","pathname","toString","totalPages","Math","ceil","length","characterList","startIndex","endIndex","slice","getSlicedCharacters","map","id","CharacterInfo","props","match","params","filter","characterWrapperInfo","text","birthday","CHARACTER_QUOTES","charName","encodeURIComponent","Quote","author","log","quoteWrapper","quote","replace","button","CharacterQuotes","quote_id","CHARACTERS","FAVORITES","Routes","path","component","FavoriteQuotes","NavBar","navbarContainer","banner","navItem","App","header","main","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a09b9709.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterWrapperInfo\":\"CharacterInfo_characterWrapperInfo__1Yneh\",\"thumb\":\"CharacterInfo_thumb__1IwZ5\",\"text\":\"CharacterInfo_text__19IyN\",\"link\":\"CharacterInfo_link__1BGNo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterWrapper\":\"Character_characterWrapper__3zS_H\",\"thumb\":\"Character_thumb__2yzMq\",\"info\":\"Character_info__2NftU\",\"name\":\"Character_name__XnACC\",\"nickname\":\"Character_nickname__3XO_9\",\"link\":\"Character_link__lq8fg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarContainer\":\"NavBar_navbarContainer__20CGU\",\"banner\":\"NavBar_banner__l1fnd\",\"navItem\":\"NavBar_navItem__2KACV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quoteWrapper\":\"Quote_quoteWrapper__2t4Nr\",\"quote\":\"Quote_quote__cGQF-\",\"author\":\"Quote_author__2C0u9\",\"button\":\"Quote_button__1RdB-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__3CKXV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__1M4I1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quotes\":\"CharacterQuotes_quotes__3hEh0\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\nexport default instance;\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from '../../../API/index';\r\n\r\nexport const fetchCharactersInfo = createAsyncThunk(\r\n  'characters/getCharactersInfo',\r\n  async (url) => {\r\n    const response = await axios.get(url);\r\n\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const CharacterInfoSlice = createSlice({\r\n  name: 'character-info',\r\n  initialState: { characters: [], status: null },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchCharactersInfo.pending]: (state) => {\r\n      state.status = 'loading';\r\n    },\r\n    [fetchCharactersInfo.fulfilled]: (state, action) => {\r\n      state.characters = action.payload;\r\n      state.status = 'success';\r\n    },\r\n    [fetchCharactersInfo.rejected]: (state, action) => {\r\n      state.status = 'failed';\r\n      console.error(action, 'info');\r\n    },\r\n  },\r\n});\r\n\r\nexport default CharacterInfoSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from '../../../API/index';\r\n\r\nexport const fetchCharacters = createAsyncThunk(\r\n  'characters/getCharacters',\r\n  async () => {\r\n    const response = await axios.get('characters');\r\n\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const CharacterSlice = createSlice({\r\n  name: 'characters',\r\n  initialState: { characters: [], status: null },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchCharacters.pending]: (state) => {\r\n      state.status = 'loading';\r\n    },\r\n    [fetchCharacters.fulfilled]: (state, action) => {\r\n      state.characters = action.payload;\r\n      state.status = 'success';\r\n    },\r\n    [fetchCharacters.rejected]: (state, action) => {\r\n      state.status = 'failed';\r\n      console.error(action.error.message, 'characters');\r\n    },\r\n  },\r\n});\r\n\r\nexport default CharacterSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from '../../../API/index';\r\n\r\nexport const fetchCharacterQuotes = createAsyncThunk(\r\n  'quotes/getQuotes',\r\n  async (url) => {\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const CharacterQuoteSlice = createSlice({\r\n  name: 'character-info',\r\n  initialState: { quotes: [], status: null },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchCharacterQuotes.pending]: (state) => {\r\n      state.status = 'loading';\r\n    },\r\n    [fetchCharacterQuotes.fulfilled]: (state, action) => {\r\n      state.quotes = action.payload;\r\n      state.status = 'success';\r\n    },\r\n    [fetchCharacterQuotes.rejected]: (state, action) => {\r\n      state.status = 'failed';\r\n      console.error(action, 'info');\r\n    },\r\n  },\r\n});\r\n\r\nexport default CharacterQuoteSlice.reducer;\r\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\n\nimport CharacterInfoSlice from '../features/character-info/redux/CharacterInfoSlice';\nimport CharacterSlice from '../features/characters-list/redux/CharactersSlice';\nimport CharacterQuoteSlice from '../features/character-quotes/redux/CharacterQuoteSlice';\n\nexport const store = configureStore({\n  reducer: combineReducers({\n    characters: CharacterSlice,\n    charInfo: CharacterInfoSlice,\n    quotes: CharacterQuoteSlice,\n  }),\n});\n","import React from 'react';\r\nimport styles from './Pagination.module.scss';\r\n\r\nfunction Pagination({ setPage, currentPage, lastPage }) {\r\n  return (\r\n    <div className={styles.pagination}>\r\n      {currentPage < 2 || <button onClick={() => setPage(1)}>{`<<`}</button>}\r\n\r\n      {currentPage < 2 || (\r\n        <button onClick={() => setPage(+currentPage - 1)}>{`<`}</button>\r\n      )}\r\n\r\n      <div className={styles.pageInfo}>\r\n        {currentPage} of {lastPage}\r\n      </div>\r\n\r\n      {currentPage >= lastPage || (\r\n        <button onClick={() => setPage(+currentPage + 1)}>{`>`}</button>\r\n      )}\r\n\r\n      {currentPage >= lastPage || (\r\n        <button onClick={() => setPage(lastPage)}>{`>>`}</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport { NavLink, generatePath } from 'react-router-dom';\r\nimport { RoutePath } from '../../routing/Routes';\r\nimport styles from './Character.module.scss';\r\n\r\nfunction Character({ item }) {\r\n  return (\r\n    <div className={styles.characterWrapper}>\r\n      <div className={styles.thumb}>\r\n        <img src={item.img} alt={item.name} />\r\n      </div>\r\n      <div className={styles.info}>\r\n        <div className={styles.name}>{item.name}</div>\r\n        <div className={styles.nickname}>{item.nickname}</div>\r\n        <NavLink\r\n          className={styles.link}\r\n          to={generatePath(RoutePath.CHARACTER, { charId: item.char_id })}\r\n        >\r\n          View info\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Character;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport Pagination from '../../pagination/Pagination';\r\n\r\nimport Character from '../components/Character';\r\nimport { fetchCharacters } from '../redux/CharactersSlice';\r\n\r\nimport styles from './CharactersList.module.scss';\r\n\r\nconst ITEMS_PER_PAGE = 10;\r\n\r\nexport default function CharactersList() {\r\n  const { characters } = useSelector((state) => state.characters);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const currentPage = searchParams.get('page');\r\n\r\n  useEffect(() => {\r\n    if (!currentPage) {\r\n      setPage(1);\r\n    }\r\n    dispatch(fetchCharacters());\r\n  }, []);\r\n\r\n  const setPage = (newPage) => {\r\n    searchParams.set('page', newPage);\r\n    history.push(`${location.pathname}?${searchParams.toString()}`);\r\n  };\r\n\r\n  const getSlicedCharacters = () => {\r\n    const startIndex = (+currentPage - 1) * ITEMS_PER_PAGE;\r\n    const endIndex = startIndex + ITEMS_PER_PAGE;\r\n    return characters.slice(startIndex, endIndex);\r\n  };\r\n\r\n  const totalPages = Math.ceil(characters.length / ITEMS_PER_PAGE);\r\n\r\n  return (\r\n    <div className={styles.characterList}>\r\n      <h2>Characters</h2>\r\n      {getSlicedCharacters().map((item) => {\r\n        return <Character item={item} key={item.id + item.name} />;\r\n      })}\r\n      <Pagination\r\n        currentPage={+currentPage}\r\n        lastPage={totalPages}\r\n        setPage={setPage}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function CharacterInfo() {\r\n  return <div>Favorites</div>;\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { NavLink, generatePath } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { RoutePath } from '../../routing/Routes';\r\n\r\nimport styles from './CharacterInfo.module.scss';\r\nimport { fetchCharactersInfo } from '../redux/CharacterInfoSlice';\r\n\r\nexport default function CharacterInfo(props) {\r\n  const id = props.match.params.charId;\r\n  useEffect(() => {\r\n    dispatch(fetchCharactersInfo(`characters/${id}`));\r\n  }, []);\r\n  const { characters, status } = useSelector((state) => state.charInfo);\r\n  const dispatch = useDispatch();\r\n\r\n  const item = characters.filter((item) => item.char_id === +id)[0];\r\n\r\n  switch (status) {\r\n    case 'failed':\r\n      return <h1>Error</h1>;\r\n    case 'loading' || 'null':\r\n      return <h1>Loading</h1>;\r\n    case 'success':\r\n      return (\r\n        <div className={styles.characterWrapperInfo}>\r\n          <h1>Character Info</h1>\r\n          <div className={styles.thumb}>\r\n            <img src={item.img} alt={item.name} />\r\n          </div>\r\n          <div className={styles.info}>\r\n            <div>\r\n              <div className={styles.text}>Name: </div>\r\n              {item.name}\r\n            </div>\r\n            <div>\r\n              <div className={styles.text}>Nickname: </div>\r\n              {item.nickname}\r\n            </div>\r\n            <div>\r\n              <div className={styles.text}>Birthday: </div>\r\n              {item.birthday}\r\n            </div>\r\n            <div>\r\n              <div className={styles.text}>Status: </div>\r\n              {item.status}\r\n            </div>\r\n            <div className={styles.link}>\r\n              <NavLink\r\n                to={generatePath(`${RoutePath.CHARACTER_QUOTES}`, {\r\n                  charName: encodeURIComponent(item.name),\r\n                })}\r\n              >\r\n                View Quotes\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport styles from './Quote.module.scss';\r\n\r\nfunction Quote({ item, author }) {\r\n  console.log(author);\r\n  return (\r\n    <div className={styles.quoteWrapper}>\r\n      <div className={styles.quote}>{`\"${item}\"`}</div>\r\n      <div className={styles.author}>{author.replace('+', ' ')}</div>\r\n      <div className={styles.button}>Button</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quote;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchCharacterQuotes } from '../redux/CharacterQuoteSlice';\r\nimport styles from './CharacterQuotes.module.scss';\r\nimport Quote from '../components/Quote';\r\n\r\nfunction CharacterQuotes(props) {\r\n  const author = props.match.params.charName.replace(' ', '+');\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchCharacterQuotes(`quote?author=${author}`));\r\n  }, []);\r\n  const { quotes, status } = useSelector((state) => state.quotes);\r\n\r\n  switch (status) {\r\n    case 'failed':\r\n      console.error();\r\n      break;\r\n    case 'loading':\r\n      return <h1>Loading</h1>;\r\n    case 'success':\r\n      return (\r\n        <div className={styles.quotes}>\r\n          <h1>Character quotes</h1>\r\n          {quotes.map((item) => (\r\n            <Quote key={item.quote_id} item={item.quote} author={author} />\r\n          ))}\r\n        </div>\r\n      );\r\n\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default CharacterQuotes;\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport CharactersList from '../characters-list/views/CharactersList';\r\nimport FavoriteQuotes from '../favorite-quotes/views/FavoriteQuotes';\r\nimport CharacterInfo from '../character-info/views/CharacterInfo';\r\nimport CharacterQuotes from '../character-quotes/views/CharacterQuotes';\r\n\r\nexport const RoutePath = {\r\n  CHARACTERS: '/characters',\r\n  CHARACTER: '/characters/:charId',\r\n  CHARACTER_QUOTES: '/characters/:charName/quotes',\r\n  FAVORITES: '/favorites',\r\n};\r\n\r\nfunction Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route path={RoutePath.CHARACTER_QUOTES} component={CharacterQuotes} />\r\n      <Route path={RoutePath.CHARACTER} component={CharacterInfo} />\r\n      <Route path={RoutePath.CHARACTERS} component={CharactersList} />\r\n      <Route path={RoutePath.FAVORITES} component={FavoriteQuotes} />\r\n      <Redirect to={RoutePath.CHARACTERS} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './NavBar.module.scss';\r\nimport { RoutePath } from '../routing/Routes';\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <nav className={styles.navbarContainer}>\r\n      <div className={styles.banner}>BREAKING BAD QUOTES</div>\r\n      <div>\r\n        <NavLink className={styles.navItem} to={RoutePath.CHARACTERS}>\r\n          CHARACTERS\r\n        </NavLink>\r\n        <NavLink className={styles.navItem} to={RoutePath.FAVORITES}>\r\n          FAVORITES\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport NavBar from './features/navbar/NavBar';\r\nimport Routes from './features/routing/Routes';\r\n\r\nimport styles from './App.module.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <header className={styles.header}>\r\n        <NavBar />\r\n      </header>\r\n      <main className={styles.main}>\r\n        <Routes />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.scss';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n    ,\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}